datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  role      Role
  developer Boolean  @default(false)
  username  String   @unique
  password  String?
  firstName String?
  lastName  String?
  avatarUrl String?
  location  String?
  phone     String?
  bio       String?
  emails    Email[]  @relation("Email_belongsTo_Owner")
}

enum Role {
  Admin
  User
}

model Email {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  email         String    @unique
  public        Boolean   @default(false)
  primary       Boolean   @default(false)
  verified      Boolean   @default(false)
  verifyToken   String?
  verifyExpires DateTime?
  owner         User      @relation(name: "Email_belongsTo_Owner", fields: [ownerId], references: [id])
  ownerId       String
  // Enable when this is resolved https://github.com/prisma/prisma/issues/3387
  // @@unique([ownerId, primary])
}

model Company {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  name            String
  addressLine1    String?
  addressLine2    String?
  city            String?
  stateOrProvince String?
  postalCode      String?
  country         String?
  phoneNumber     String?
}

model Reporter {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt
  name              String
  addressLine1      String?
  addressLine2      String?
  addressCity       String?
  addressState      String?
  addressPostalCode String?
  phoneNumber       String?
  profession        String?
  faxNumber         String?
}

model Provider {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  firstName String?
  lastName  String?
}
